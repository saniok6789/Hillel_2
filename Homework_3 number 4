class BinaryNumber:
    def __init__(self, value):
        self.value = int(value, 2)

    def __and__(self, other):
        return BinaryNumber(bin(self.value & other.value)[2:])

    def __or__(self, other):
        return BinaryNumber(bin(self.value | other.value)[2:])

    def __xor__(self, other):
        return BinaryNumber(bin(self.value ^ other.value)[2:])

    def __invert__(self):
        return BinaryNumber(bin(~self.value & 0b1111)[2:])

    def __repr__(self):
        return bin(self.value)[2:]

a = BinaryNumber('1010')
b = BinaryNumber('1100')
print(a & b)  
print(a | b) 
print(a ^ b)
print(~a)     
